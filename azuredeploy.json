{  
   "$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
   "contentVersion":"1.0.0.0",
   "parameters":{  
      "virtualNetworkName":{  
         "type":"string",
        "metadata": {
          "description": "Name of the VNet."
        },
       "defaultValue": "Vnet"
      },
      "subnetPrefix": {
          "type": "string",
          "metadata": {
              "description": "CIDR block for VM subnet, subset of azureVNetAddressPrefix address space"
          }
      },
      "vnetAddressPrefix":{  
         "type":"string",
         "metadata":{  
            "description":"Address space for the VNet."
         }
      },
      "subnetName": {
          "type": "string",
          "metadata": {
              "description": "Arbitrary name for the Azure Subnet"
          },
        "defaultValue": "Subnet"
      },
      "gatewaySubnetPrefix":{  
         "type":"string",
         "metadata":{  
            "description":"The prefix for the GatewaySubnet where the VirtualNetworkGateway will be deployed. This must be at least /29."
         }
      },
      "gatewayPublicIPName":{  
         "type":"string",
         "metadata":{  
            "description":"The name of the PublicIP attached to the VirtualNetworkGateway."
         },
         "defaultValue": "VnetPip"
      },
      "gatewayName":{  
         "type":"string",
         "metadata":{  
            "description":"The name of the VirtualNetworkGateway."
         },
         "defaultValue": "VnetGw"
      },
      "gatewaySku":{  
         "type":"string",
         "metadata":{  
            "description":"The Sku of the Gateway. This must be one of Basic, Standard or HighPerformance."
         },
         "defaultValue": "Basic"
      },
      "vpnClientAddressPoolPrefix":{  
         "type":"string",
         "metadata":{  
            "description":"The IP address range from which VPN clients will receive an IP address when connected. Range specified must not overlap with on-premise network."
         }
      },
      "clientRootCertName":{  
         "type":"string",
         "metadata":{  
            "description":"The name of the client root certificate used to authenticate VPN clients. This is a common name used to identify the root cert."
         }
      },
      "clientRootCertData":{  
         "type":"string",
         "metadata":{  
            "description":"Client root certificate data used to authenticate VPN clients."
         }
      }
   },
   "variables":{  
      "apiVersion":"2015-06-15",
      "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
      "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
      "adAssetLocation": "https://raw.githubusercontent.com/yusaito001/PtoS/master/",
      "vnetwithDNSTemplateURL": "[concat(variables('adAssetLocation'),'/vnet-with-dns-server.json')]"
      "dnsServerPrivateIp": "10.0.0.4",
   },
   "resources":[
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
              "name": "[parameters('subnetName')]",
              "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]"
              }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('gatewaySubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gatewayPublicIPName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
        "name": "[variables('updateVNetDNS1')]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2016-02-01",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "uri": "[variables('vnetwithDNSTemplateURL')]",
                "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "virtualNetworkName": {
                    "value": "[parameters('virtualNetworkName')]"
                },
                "virtualNetworkAddressRange": {
                    "value": "[parameters('vnetAddressPrefix')]"
                },
                "subnets": {
                    "value": "[parameters('subnetName')]"
                },
                "dnsServerAddress": {
                    "value": [
                        "[variables('dnsServerPrivateIp')]"                            
                    ]
                }
            }
        }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
              }
            },
            "name": "vnetGatewayConfig"
          }
        ],
        "sku": {
          "name": "[parameters('gatewaySku')]",
          "tier": "[parameters('gatewaySku')]"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": "false",
        "vpnClientConfiguration": {
          "vpnClientAddressPool": {
            "addressPrefixes": [
              "[parameters('vpnClientAddressPoolPrefix')]"
            ]
          },
          "vpnClientRootCertificates": [
            {
              "name": "[parameters('clientRootCertName')]",
              "properties": {
                "PublicCertData": "[parameters('clientRootCertData')]"
              }
            }
          ],
        }
      }
    }
   ]
}
